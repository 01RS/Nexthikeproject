{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b67455a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "from tkinter import *\n",
    "win = Tk() \n",
    "win.geometry(\"520x1000\")  \n",
    "win.resizable(0, 0) \n",
    "\n",
    "win.title(\"Lets Do Maths\")\n",
    "\n",
    "\n",
    "def btn_click(item):\n",
    "    global expression\n",
    "    expression = expression + str(item)\n",
    "    input_text.set(expression)\n",
    "\n",
    "\n",
    "def bt_clear(): \n",
    "    global expression \n",
    "    expression = \"\" \n",
    "    input_text.set(\"\")\n",
    " \n",
    "\n",
    "def bt_equal():\n",
    "    global expression\n",
    "    result = str(eval(expression)) \n",
    "    input_text.set(result)\n",
    "    expression = \"\"\n",
    " \n",
    "expression = \"\"\n",
    "input_text = StringVar()\n",
    " \n",
    " \n",
    "input_frame = Frame(win, width=312, height=50, bd=0, highlightbackground=\"powder blue\", highlightcolor=\"yellow\", highlightthickness=2)\n",
    " \n",
    "input_frame.pack(side=TOP)\n",
    " \n",
    " \n",
    "input_field = Entry(input_frame, font=('arial', 18, 'bold'), textvariable=input_text, width=50, bg=\"#c7dcff\", bd=0, justify=RIGHT)\n",
    " \n",
    "input_field.grid(row=0, column=0)\n",
    " \n",
    "input_field.pack(ipady=10) \n",
    "\n",
    " \n",
    "button_fr = Frame(win, width=312, height=272.5, bg=\"green\")\n",
    " \n",
    "button_fr.pack()\n",
    " \n",
    "# row 1\n",
    " \n",
    "clear = Button(button_fr, text = \"C\", fg = \"grey\", width = 32, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: bt_clear()).grid(row = 0, column = 0, columnspan = 3, padx = 1, pady = 1)\n",
    " \n",
    "divide = Button(button_fr, text = \"/\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: btn_click(\"/\")).grid(row = 0, column = 3, padx = 1, pady = 1)\n",
    " \n",
    "# row 2\n",
    " \n",
    "seven = Button(button_fr, text = \"7\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(7)).grid(row = 1, column = 0, padx = 1, pady = 1)\n",
    " \n",
    "eight = Button(button_fr, text = \"8\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(8)).grid(row = 1, column = 1, padx = 1, pady = 1)\n",
    " \n",
    "nine = Button(button_fr, text = \"9\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(9)).grid(row = 1, column = 2, padx = 1, pady = 1)\n",
    " \n",
    "multiply = Button(button_fr, text = \"*\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: btn_click(\"*\")).grid(row = 1, column = 3, padx = 1, pady = 1)\n",
    " \n",
    "#   row 3\n",
    " \n",
    "four = Button(button_fr, text = \"4\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(4)).grid(row = 2, column = 0, padx = 1, pady = 1)\n",
    " \n",
    "five = Button(button_fr, text = \"5\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(5)).grid(row = 2, column = 1, padx = 1, pady = 1)\n",
    " \n",
    "six = Button(button_fr, text = \"6\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(6)).grid(row = 2, column = 2, padx = 1, pady = 1)\n",
    " \n",
    "minus = Button(button_fr, text = \"-\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: btn_click(\"-\")).grid(row = 2, column = 3, padx = 1, pady = 1)\n",
    " \n",
    "# row 4\n",
    " \n",
    "one = Button(button_fr, text = \"1\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(1)).grid(row = 3, column = 0, padx = 1, pady = 1)\n",
    " \n",
    "two = Button(button_fr, text = \"2\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(2)).grid(row = 3, column = 1, padx = 1, pady = 1)\n",
    " \n",
    "three = Button(button_fr, text = \"3\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(3)).grid(row = 3, column = 2, padx = 1, pady = 1)\n",
    " \n",
    "plus = Button(button_fr, text = \"+\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: btn_click(\"+\")).grid(row = 3, column = 3, padx = 1, pady = 1)\n",
    " \n",
    "# row 4\n",
    " \n",
    "zero = Button(button_fr, text = \"0\", fg = \"grey\", width = 21, height = 3, bd = 0, bg = \"#80afff\", cursor = \"hand2\", command = lambda: btn_click(0)).grid(row = 4, column = 0, columnspan = 2, padx = 1, pady = 1)\n",
    " \n",
    "point = Button(button_fr, text = \".\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: btn_click(\".\")).grid(row = 4, column = 2, padx = 1, pady = 1)\n",
    " \n",
    "equals = Button(button_fr, text = \"=\", fg = \"grey\", width = 10, height = 3, bd = 0, bg = \"#c7dcff\", cursor = \"hand2\", command = lambda: bt_equal()).grid(row = 4, column = 3, padx = 1, pady = 1)\n",
    " \n",
    "win.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "058c4c40",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0991ba5c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "797bc3eb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
